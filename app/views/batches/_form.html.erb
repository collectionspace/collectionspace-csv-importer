<%= form_with(model: batch, local: true, id: dom_id(batch), class: 'mt-3', data: { 'reflex-root': '#mappers' }) do |form| %>
<% if flash[:csv_lint] %>
  <article class="flash message is-danger is-small mt-3">
    <div class="message-header">
      <p>Uploaded CSV is invalid</p>
    </div>
    <div class="message-body">
      <p class="content">
	Consult <a href="https://github.com/Data-Liberation-Front/csvlint.rb/#errors">csvlint's errors documentation</a> for more info on what the different errors mean.</p>
	<ul>
	<% flash[:csv_lint].split('|||').each do |err| %>
	  <li><%= err %></li>
	<% end %>
	</ul>
      <p>&nbsp;</p>
      <p>If you are getting "unknown_error", some things to check for might include:</p>
      <ul>
	<li>Line breaks within a CSV cell may be breaking the CSV structure</li>
      </ul>
    </div>
  </article>
<% end %>

<% if flash[:csv_lint_invalid_encoding] %>
  <article class="flash message is-danger is-small mt-3">
    <div class="message-header">
      <p>Uploaded CSV contains characters with invalid encoding</p>
    </div>
    <div class="message-body">
      <p class="content">
	Your CSV must contain only valid UTF-8 characters. It currently contains
	characters with invalid encoding.
      </p>
      <p class="content">
	Below, one entry is shown for the first occurrence of each unique
	invalid character in your CSV. The invalid characters here have been
	replaced with ï¿½, but may look different in your file on your machine.
      </p>
      <p class="content">
        Each entry below displays the text immediately before and after the
	invalid character, so you can more easily identify each invalid
	character in your file. This contextual text may contain other invalid
	characters, also replaced with ï¿½. The invalid character whose first
	occurrence is captured in the entry will be the middle character of the
	entry, unless the it occurs very close to the beginning or end of your
	file.
      </p>
      <p class="content">
	Once you identify the invalid character represented in each entry below,
	find/replace all instances of the invalid character in your file.
      </p>
      <p class="content">
	Note that the context shown may stretch across columns, may show the ","
	column delimiter, or may show line breaks. Opening your CSV as a text
	file in Notepad or other text editor will show you something closer to
	what is in the entries below. Just remember that the valid UTF-8 ï¿½
	character in the entries below is always a substitute for some other
	invalid character in your CSV.
      </p>
	<ul>
	<% flash[:csv_lint_invalid_encoding].split('|||').each do |err| %>
	  <li>ðŸ”´ <%= err %></li>
	<% end %>
	</ul>
    </div>
  </article>
<% end %>

<% if flash[:csv_too_long] %>
  <article class="flash message is-danger is-small mt-3">
    <div class="message-header">
      <p>Uploaded CSV has more than <%= csv_row_limit %> rows</p>
    </div>
    <div class="message-body">
      <p class="content">The maximum number of rows this tool can import from a single CSV is <%= csv_row_limit %>. Please break your CSV file into multiple smaller files and create a separate batch for each.</p>
    </div>
  </article>
<% end %>

  <div class="columns">
    <div class="column">
      <div class="columns is-multiline">
        <%= content_tag :div, class: 'column is-half' do %>
          <%= content_tag :div, class: 'field' do %>
            <%= form.label t('batch.name'), class: 'label' %>
            <%= content_tag :div, class: 'control has-icons-left' do %>
              <%= form.text_field :name, class: 'input', placeholder: t('batch.name'),
                autofocus: (batch.name.blank? ? true : false)
              %>
              <%= render partial: 'shared/icon',
                  locals: { classes: 'has-text-danger is-small is-left', icon: 'asterisk' }
              %>
            <% end %>
          <% end %>
        <% end %>

        <%= content_tag :div, class: 'column is-half' do %>
          <%= content_tag :div, class: 'field' do %>
            <%= form.label t('batch.group'), class: 'label' %>
            <div class="select is-fullwidth">
              <%= form.collection_select :group_id, Group.select_options_with_default(current_user), :id, :name,
                  { selected: current_user.group_id }, disabled: !admin? %>
            </div>
          <% end %>
        <% end %>

        <%= content_tag :div, class: 'column is-half' do %>
          <%= form.label t('batch.connection'), class: 'label' %>
          <div class="select is-fullwidth">
            <%= form.collection_select :connection_id, connections_for_batch,
              :id, :name, { selected: @connection.id }, data: { 'reflex': 'change->Connection#selected' }
            %>
          </div>
        <% end %>

        <%= content_tag :div, id: 'mappers', class: 'column is-half' do %>
          <div class="field">
            <%= form.label t('batch.mapper'), class: 'label' %>
            <div class="select is-fullwidth">
              <%= form.collection_select :mapper_id, Mapper.select_options(@connection), :id, :title,
                  selected: Mapper.select_options(@connection).first
              %>
            </div>
          </div>
        <% end %>

        <%= content_tag :div, class: 'column is-three-quarters' do %>
          <%= form.label t('batch.file'), class: 'label' %>
          <%= content_tag :div, class: 'file mb-3 is-fullwidth' do %>
            <%= content_tag :label, class: 'file-label' do %>
              <%=
                form.file_field :spreadsheet, accept: csv_content_types, required: true,
                class: 'file-input', onchange: filename_js
              %>
              <%= content_tag :span, class: 'file-cta' do %>
                <%= fa_icon('upload') %>
                <%= content_tag :span, class: 'file-label ml-2' do %>
                  Select file
                <% end %>
              <% end %>
              <%= content_tag :span, id: 'file-name', class: 'file-name' do %>
                No file selected
              <% end %>
            <% end %>
          <% end %>
        <% end %>

        <%= content_tag :div, class: 'column is-one-quarter' do %>
        <% end %>

        <%= content_tag :div, class: 'column is-full' do %>
          <%= content_tag :div, class: 'field' do %>
            <%= form.label t('batch.config.label'), class: 'label' %>
            <%= form.text_area :batch_config, id: 'batch_config_entry' %>
          <% end %>
        <% end %>

        <%= content_tag :div, class: 'column is-full' do %>
          <div class="field is-grouped">
            <div class="control">
              <%= form.button t('action.submit'), class: 'button is-link',
                  data: { 'disable-with': spinner_html }, style: 'min-width: 5rem;' %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
    <div class="column">
      <%= render partial: 'field_definitions' %>
    </div>
  </div>
<% end %>
